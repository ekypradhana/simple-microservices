// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/product/service.proto

/*
Package product is a generated protocol buffer package.

It is generated from these files:
	rpc/product/service.proto

It has these top-level messages:
	ProductModel
	UpdateStockParam
	ParamString
	ResultInfo
*/
package product

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ProductModel struct {
	ProductId string `protobuf:"bytes,1,opt,name=product_id,json=productId" json:"product_id,omitempty"`
	Stock     int32  `protobuf:"varint,2,opt,name=stock" json:"stock,omitempty"`
}

func (m *ProductModel) Reset()                    { *m = ProductModel{} }
func (m *ProductModel) String() string            { return proto.CompactTextString(m) }
func (*ProductModel) ProtoMessage()               {}
func (*ProductModel) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ProductModel) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *ProductModel) GetStock() int32 {
	if m != nil {
		return m.Stock
	}
	return 0
}

type UpdateStockParam struct {
	ProductId string `protobuf:"bytes,1,opt,name=product_id,json=productId" json:"product_id,omitempty"`
	Amount    int32  `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
}

func (m *UpdateStockParam) Reset()                    { *m = UpdateStockParam{} }
func (m *UpdateStockParam) String() string            { return proto.CompactTextString(m) }
func (*UpdateStockParam) ProtoMessage()               {}
func (*UpdateStockParam) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *UpdateStockParam) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *UpdateStockParam) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type ParamString struct {
	Val string `protobuf:"bytes,1,opt,name=val" json:"val,omitempty"`
}

func (m *ParamString) Reset()                    { *m = ParamString{} }
func (m *ParamString) String() string            { return proto.CompactTextString(m) }
func (*ParamString) ProtoMessage()               {}
func (*ParamString) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ParamString) GetVal() string {
	if m != nil {
		return m.Val
	}
	return ""
}

type ResultInfo struct {
	Status  string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *ResultInfo) Reset()                    { *m = ResultInfo{} }
func (m *ResultInfo) String() string            { return proto.CompactTextString(m) }
func (*ResultInfo) ProtoMessage()               {}
func (*ResultInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ResultInfo) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ResultInfo) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*ProductModel)(nil), "simple.microservices.product.ProductModel")
	proto.RegisterType((*UpdateStockParam)(nil), "simple.microservices.product.UpdateStockParam")
	proto.RegisterType((*ParamString)(nil), "simple.microservices.product.ParamString")
	proto.RegisterType((*ResultInfo)(nil), "simple.microservices.product.ResultInfo")
}

func init() { proto.RegisterFile("rpc/product/service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 298 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0x41, 0x4b, 0xf3, 0x40,
	0x10, 0xa5, 0x5f, 0xbe, 0x26, 0x64, 0xea, 0xa1, 0x2c, 0x22, 0xb1, 0x28, 0x96, 0x9c, 0xa2, 0x87,
	0x2d, 0xe8, 0xdd, 0x83, 0x0a, 0x92, 0x83, 0x50, 0x12, 0xbc, 0x48, 0x45, 0xd6, 0x64, 0x0c, 0xc1,
	0x24, 0x1b, 0x76, 0x37, 0xf9, 0x17, 0xfe, 0x67, 0x49, 0x3a, 0x62, 0xf0, 0x90, 0xb6, 0xb7, 0x7d,
	0x33, 0xf3, 0xde, 0xbc, 0x99, 0x59, 0x38, 0x55, 0x75, 0xb2, 0xaa, 0x95, 0x4c, 0x9b, 0xc4, 0xac,
	0x34, 0xaa, 0x36, 0x4f, 0x90, 0xd7, 0x4a, 0x1a, 0xc9, 0xce, 0x74, 0x5e, 0xd6, 0x05, 0xf2, 0x32,
	0x4f, 0x94, 0xa4, 0x94, 0xe6, 0x54, 0xeb, 0xdf, 0xc3, 0xd1, 0x7a, 0xfb, 0x7c, 0x92, 0x29, 0x16,
	0xec, 0x1c, 0x80, 0x52, 0x6f, 0x79, 0xea, 0x4d, 0x96, 0x93, 0xc0, 0x8d, 0x5c, 0x8a, 0x84, 0x29,
	0x3b, 0x86, 0xa9, 0x36, 0x32, 0xf9, 0xf4, 0xfe, 0x2d, 0x27, 0xc1, 0x34, 0xda, 0x02, 0x3f, 0x84,
	0xf9, 0x73, 0x9d, 0x0a, 0x83, 0x71, 0x07, 0xd7, 0x42, 0x89, 0x72, 0x97, 0xd0, 0x09, 0xd8, 0xa2,
	0x94, 0x4d, 0x65, 0x48, 0x89, 0x90, 0x7f, 0x01, 0xb3, 0x9e, 0x1f, 0x1b, 0x95, 0x57, 0x19, 0x9b,
	0x83, 0xd5, 0x8a, 0x82, 0xe8, 0xdd, 0xd3, 0xbf, 0x05, 0x88, 0x50, 0x37, 0x85, 0x09, 0xab, 0x0f,
	0xd9, 0xc9, 0x68, 0x23, 0x4c, 0xa3, 0xa9, 0x84, 0x10, 0xf3, 0xc0, 0x29, 0x51, 0x6b, 0x91, 0x61,
	0xaf, 0xef, 0x46, 0x3f, 0xf0, 0xfa, 0xcb, 0x02, 0x87, 0x26, 0x66, 0x1b, 0xf8, 0x1f, 0x8b, 0x16,
	0xd9, 0x15, 0x1f, 0xdb, 0x11, 0x1f, 0x2e, 0x68, 0x11, 0x8c, 0xd7, 0x0e, 0xbc, 0x6d, 0xc0, 0x7a,
	0x44, 0xc3, 0x2e, 0x77, 0x88, 0xff, 0x4e, 0xbb, 0x38, 0xc0, 0x07, 0x7b, 0x05, 0xfb, 0x01, 0x0b,
	0x34, 0x78, 0x48, 0x83, 0xfd, 0xcd, 0x67, 0x30, 0x1b, 0x9c, 0x94, 0xf1, 0x71, 0xe2, 0xdf, 0xeb,
	0xef, 0xdf, 0xe8, 0xce, 0x7d, 0x71, 0x28, 0xfa, 0x6e, 0xf7, 0x1f, 0xf6, 0xe6, 0x3b, 0x00, 0x00,
	0xff, 0xff, 0x44, 0x87, 0xf1, 0x30, 0xcd, 0x02, 0x00, 0x00,
}
